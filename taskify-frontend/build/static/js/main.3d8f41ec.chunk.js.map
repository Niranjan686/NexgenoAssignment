{"version":3,"sources":["components/Login.jsx","components/NavBar.jsx","components/Dashboard.jsx","components/Error.jsx","components/Home.jsx","components/Todo/TodoHeading.jsx","App.js","index.js"],"names":["Login","React","createElement","className","style","borderRadius","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","required","value","backgroundColor","onClick","loginWithGoogle","window","open","Headers","userdata","setUserdata","useState","console","log","useEffect","async","response","axios","get","withCredentials","data","user","error","getUser","Fragment","src","alt","height","Object","keys","length","NavLink","to","logout","Dashboard","image","width","displayName","email","Error","navigate","useNavigate","textAlign","cursor","Home","handleNavigation","TodoHeading","isCompleteScreen","setIsCompleteScreen","allTodos","setTodos","newTitle","setNewTitle","newDescription","setNewDescription","completedTodos","setCompletedTodos","currentEdit","setCurrentEdit","currentEditedItem","setCurrentEditedItem","handleDeleteTodo","index","reducedTodo","splice","localStorage","setItem","JSON","stringify","savedTodo","parse","getItem","savedCompletedTodo","handleUpdateToDo","newToDo","onChange","e","target","handleAddTodo","newTodoItem","title","description","updatedTodoArr","push","concat","map","item","key","handleUpdateTitle","prev","rows","handleUpdateDescription","AiOutlineDelete","BsCheckLg","now","Date","completedOn","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","filteredItem","updatedCompletedArr","handleComplete","AiOutlineEdit","handleEdit","ind","handleDeleteCompletedTodo","App","NavBar","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.3d8f41ec.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n  const loginWithGoogle = () => {\r\n    window.open(\"https://taskify-backend-gules.vercel.app/auth/google/callback\", \"_self\");\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Add form submission logic here\r\n    // e.g., validate inputs and send a request to the backend\r\n  }\r\n\r\n  return (\r\n    <section className=\"vh-85\">\r\n      <div className=\"container py-5 h-100\">\r\n        <div className=\"row d-flex justify-content-center align-items-center h-100\">\r\n          <div className=\"col-12 col-md-8 col-lg-6 col-xl-5\">\r\n            <div className=\"card shadow-2-strong\" style={{ borderRadius: '1rem' }}>\r\n              <div className=\"card-body p-5 text-center\">\r\n                <h3 className=\"mb-5\">Sign in</h3>\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"form-outline mb-3\">\r\n                    <label htmlFor=\"typeEmailX-2\" className=\"form-label\">Email</label>\r\n                    <input type=\"email\" id=\"typeEmailX-2\" className=\"form-control form-control-lg\" placeholder='Email' required />\r\n                  </div>\r\n                  <div className=\"form-outline mb-3\">\r\n                    <label htmlFor=\"typePasswordX-2\" className=\"form-label\">Password</label>\r\n                    <input type=\"password\" id=\"typePasswordX-2\" className=\"form-control form-control-lg\" placeholder='Password' required />\r\n                  </div>\r\n                  <div className=\"form-check d-flex justify-content-start mb-3\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"form1Example3\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"form1Example3\"> Remember password </label>\r\n                  </div>\r\n                  <button className=\"btn btn-primary btn-lg btn-block\" type=\"submit\">Login</button>\r\n                </form>\r\n                <hr className=\"my-4\" />\r\n                <button className=\"btn btn-lg btn-block btn-primary\" style={{ backgroundColor: '#dd4b39' }} type=\"button\" onClick={loginWithGoogle}>\r\n                  <i className=\"fab fa-google me-2\"></i> Sign in with Google\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from 'react';\r\nimport \"./NavBar.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Headers = () => {\r\n    const [userdata, setUserdata] = useState({});\r\n    console.log(\"response\", userdata);\r\n\r\n    const getUser = async () => {\r\n        try {\r\n            const response = await axios.get(\"https://taskify-backend-gules.vercel.app/login/sucess\", { withCredentials: true });\r\n            setUserdata(response.data.user);\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        window.open(\"https://taskify-backend-gules.vercel.app/logout\", \"_self\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        getUser();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <nav>\r\n                    <div className=\"left\">\r\n                        <img src='../Taskify.jpg' alt='Img not Found' style={{ height: \"4em\" }}></img>\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <ul>\r\n                            {Object.keys(userdata).length > 0 ? (\r\n                                <>\r\n                                    <li>\r\n                                        <NavLink to=\"/todo\">Home</NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink to=\"/dashboard\">Profile</NavLink>\r\n                                    </li>\r\n                                    <li onClick={logout}>Logout</li>\r\n                                </>\r\n                            ) : <p></p>}\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Headers;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Dashboard.css'; // Ensure this file has relevant styles\r\n\r\nconst Dashboard = () => {\r\n    const [userdata, setUserdata] = useState({});\r\n    console.log(\"response\", userdata)\r\n\r\n\r\n    const getUser = async () => {\r\n        try {\r\n            const response = await axios.get(\"https://taskify-backend-gules.vercel.app/login/sucess\", { withCredentials: true });\r\n            setUserdata(response.data.user);\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n        }\r\n    };\r\n    \r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getUser()\r\n    }, [])\r\n\r\n    return (\r\n        <section style={{ backgroundColor: '#eee' }}>\r\n            <div className=\"container py-5\">\r\n                \r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"card mb-4\">\r\n                            <div className=\"card-body text-center\">\r\n                                <img \r\n                                    src={userdata.image || 'https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava3.webp'} \r\n                                    alt=\"avatar\" \r\n                                    className=\"rounded-circle img-fluid\" \r\n                                    style={{ width: '150px' }} \r\n                                />\r\n                                <h5 className=\"my-3\">{userdata.displayName || 'John Smith'}</h5>\r\n                                <p className=\"text-muted mb-1\">Full Stack Developer</p>\r\n                                <p className=\"text-muted mb-4\">Mumbai,Maharshtra</p>\r\n                                <div className=\"d-flex justify-content-center mb-2\">\r\n                                    <button type=\"button\" className=\"btn btn-primary\">Edit</button>\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                       \r\n                    </div>\r\n                    <div className=\"col-lg-8\">\r\n                        <div className=\"card mb-4\">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-3\">\r\n                                        <p className=\"mb-0\">Full Name</p>\r\n                                    </div>\r\n                                    <div className=\"col-sm-9\">\r\n                                        <p className=\"text-muted mb-0\">{userdata.displayName || 'Johnatan Smith'}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-3\">\r\n                                        <p className=\"mb-0\">Email</p>\r\n                                    </div>\r\n                                    <div className=\"col-sm-9\">\r\n                                        <p className=\"text-muted mb-0\">{userdata.email || 'example@example.com'}</p>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                              \r\n                                <hr />\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-3\">\r\n                                        <p className=\"mb-0\">Mobile</p>\r\n                                    </div>\r\n                                    <div className=\"col-sm-9\">\r\n                                        <p className=\"text-muted mb-0\">970--**884</p>\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-3\">\r\n                                        <p className=\"mb-0\">Address</p>\r\n                                    </div>\r\n                                    <div className=\"col-sm-9\">\r\n                                        <p className=\"text-muted mb-0\">Mumbai, Maharashtra</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Error = () => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <>\r\n      <div style={{textAlign:\"center\"}}>\r\n        <h2>Error</h2>\r\n        <button style={{cursor:\"pointer\"}} onClick={()=>navigate(\"/\")}>Back To Home</button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Error","import React from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleNavigation = () => {\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-center\">\r\n            <h1>\r\n              Organize your <br /> work and life, finally.\r\n            </h1>\r\n            <p>\r\n              Become focused, organized, and calm with <br />\r\n              todo app. The World's #1 task manager app.\r\n            </p>\r\n            <button className=\"home-btn p-2\" onClick={handleNavigation}>Login to Start</button>  \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Todo.css';\r\nimport { AiOutlineDelete, AiOutlineEdit } from 'react-icons/ai';\r\nimport { BsCheckLg } from 'react-icons/bs';\r\n\r\nfunction TodoHeading() {\r\n  const [isCompleteScreen, setIsCompleteScreen] = useState(false);\r\n  const [allTodos, setTodos] = useState([]);\r\n  const [newTitle, setNewTitle] = useState('');\r\n  const [newDescription, setNewDescription] = useState('');\r\n  const [completedTodos, setCompletedTodos] = useState([]);\r\n  const [currentEdit, setCurrentEdit] = useState('');\r\n  const [currentEditedItem, setCurrentEditedItem] = useState('');\r\n\r\n  const handleAddTodo = () => {\r\n    let newTodoItem = {\r\n      title: newTitle,\r\n      description: newDescription,\r\n    };\r\n\r\n    let updatedTodoArr = [...allTodos];\r\n    updatedTodoArr.push(newTodoItem);\r\n    setTodos(updatedTodoArr);\r\n    localStorage.setItem('todolist', JSON.stringify(updatedTodoArr));\r\n  };\r\n\r\n  const handleDeleteTodo = (index) => {\r\n    let reducedTodo = [...allTodos];\r\n    reducedTodo.splice(index, 1);\r\n\r\n    localStorage.setItem('todolist', JSON.stringify(reducedTodo));\r\n    setTodos(reducedTodo);\r\n  };\r\n\r\n  const handleComplete = (index) => {\r\n    let now = new Date();\r\n    let dd = now.getDate();\r\n    let mm = now.getMonth() + 1;\r\n    let yyyy = now.getFullYear();\r\n    let h = now.getHours();\r\n    let m = now.getMinutes();\r\n    let s = now.getSeconds();\r\n    let completedOn =\r\n      dd + '-' + mm + '-' + yyyy + ' at ' + h + ':' + m + ':' + s;\r\n\r\n    let filteredItem = {\r\n      ...allTodos[index],\r\n      completedOn: completedOn,\r\n    };\r\n\r\n    let updatedCompletedArr = [...completedTodos];\r\n    updatedCompletedArr.push(filteredItem);\r\n    setCompletedTodos(updatedCompletedArr);\r\n    handleDeleteTodo(index);\r\n    localStorage.setItem(\r\n      'completedTodos',\r\n      JSON.stringify(updatedCompletedArr)\r\n    );\r\n  };\r\n\r\n  const handleDeleteCompletedTodo = (index) => {\r\n    let reducedTodo = [...completedTodos];\r\n    reducedTodo.splice(index, 1);\r\n\r\n    localStorage.setItem('completedTodos', JSON.stringify(reducedTodo));\r\n    setCompletedTodos(reducedTodo);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let savedTodo = JSON.parse(localStorage.getItem('todolist'));\r\n    let savedCompletedTodo = JSON.parse(\r\n      localStorage.getItem('completedTodos')\r\n    );\r\n    if (savedTodo) {\r\n      setTodos(savedTodo);\r\n    }\r\n\r\n    if (savedCompletedTodo) {\r\n      setCompletedTodos(savedCompletedTodo);\r\n    }\r\n  }, []);\r\n\r\n  const handleEdit = (ind, item) => {\r\n    console.log(ind);\r\n    setCurrentEdit(ind);\r\n    setCurrentEditedItem(item);\r\n  };\r\n\r\n  const handleUpdateTitle = (value) => {\r\n    setCurrentEditedItem((prev) => {\r\n      return { ...prev, title: value };\r\n    });\r\n  };\r\n\r\n  const handleUpdateDescription = (value) => {\r\n    setCurrentEditedItem((prev) => {\r\n      return { ...prev, description: value };\r\n    });\r\n  };\r\n\r\n  const handleUpdateToDo = () => {\r\n    let newToDo = [...allTodos];\r\n    newToDo[currentEdit] = currentEditedItem;\r\n    setTodos(newToDo);\r\n    setCurrentEdit('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>My Todos</h1>\r\n\r\n      <div className=\"todo-wrapper\">\r\n        <div className=\"todo-input\">\r\n          <div className=\"todo-input-item\">\r\n            <label>Title</label>\r\n            <input\r\n              type=\"text\"\r\n              value={newTitle}\r\n              onChange={(e) => setNewTitle(e.target.value)}\r\n              placeholder=\"What's the task title?\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"todo-input-item\">\r\n            <label>Description</label>\r\n            <input\r\n              type=\"text\"\r\n              value={newDescription}\r\n              onChange={(e) => setNewDescription(e.target.value)}\r\n              placeholder=\"What's the task description?\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"todo-input-item\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleAddTodo}\r\n              className=\"primaryBtn\"\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"btn-area\">\r\n          <button\r\n            className={`secondaryBtn ${isCompleteScreen === false && 'active'}`}\r\n            onClick={() => setIsCompleteScreen(false)}\r\n          >\r\n            Todo\r\n          </button>\r\n          <button\r\n            className={`secondaryBtn ${isCompleteScreen === true && 'active'}`}\r\n            onClick={() => setIsCompleteScreen(true)}\r\n          >\r\n            Completed\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"todo-list\">\r\n\r\n          {isCompleteScreen === false &&\r\n            allTodos.map((item, index) => {\r\n              if (currentEdit === index) {\r\n                return (\r\n                  <div className=\"edit__wrapper\" key={index}>\r\n                    <input\r\n                      placeholder=\"Updated Title\"\r\n                      onChange={(e) => handleUpdateTitle(e.target.value)}\r\n                      value={currentEditedItem.title}\r\n                    />\r\n                    <textarea\r\n                      placeholder=\"Updated Title\"\r\n                      rows={4}\r\n                      onChange={(e) => handleUpdateDescription(e.target.value)}\r\n                      value={currentEditedItem.description}\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={handleUpdateToDo}\r\n                      className=\"primaryBtn\"\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div className=\"todo-list-item\" key={index}>\r\n                    <div>\r\n                      <h3>{item.title}</h3>\r\n                      <p>{item.description}</p>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <AiOutlineDelete\r\n                        className=\"icon\"\r\n                        onClick={() => handleDeleteTodo(index)}\r\n                        title=\"Delete?\"\r\n                      />\r\n                      <BsCheckLg\r\n                        className=\"check-icon\"\r\n                        onClick={() => handleComplete(index)}\r\n                        title=\"Complete?\"\r\n                      />\r\n                      <AiOutlineEdit\r\n                        className=\"check-icon\"\r\n                        onClick={() => handleEdit(index, item)}\r\n                        title=\"Edit?\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n\r\n            })}\r\n\r\n          {isCompleteScreen === true &&\r\n            completedTodos.map((item, index) => {\r\n              return (\r\n                <div className=\"todo-list-item\" key={index}>\r\n                  <div>\r\n                    <h3>{item.title}</h3>\r\n                    <p>{item.description}</p>\r\n                    <p><small>Completed on: {item.completedOn}</small></p>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <AiOutlineDelete\r\n                      className=\"icon\"\r\n                      onClick={() => handleDeleteCompletedTodo(index)}\r\n                      title=\"Delete?\"\r\n                    />\r\n                  </div>\r\n\r\n                </div>\r\n              );\r\n            })}\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoHeading;\r\n","import React from 'react'\nimport { Routes, Route } from \"react-router-dom\";\nimport './App.css';\nimport Login from './components/Login.jsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from './components/NavBar.jsx';\nimport Dashboard from './components/Dashboard.jsx';\nimport Error from './components/Error.jsx';\nimport Home from './components/Home.jsx';\nimport TodoHeading from './components/Todo/TodoHeading.jsx';\n\nfunction App() {\n  \n  return (\n    <>\n    <NavBar></NavBar>\n   \n    <Routes>\n        <Route path='/' element={<Home />} />\n        <Route path='/login' element={<Login />} />\n        <Route path='/dashboard' element={<Dashboard />} />\n        <Route path='/todo' element={<TodoHeading/>}/>\n        <Route path='*' element={<Error />} />\n      </Routes>\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\"\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}